
worker_processes  1;

user nginx_user;

error_log   logs/debug.log debug;

events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;

    keepalive_timeout  65;

    server {
        listen       80;
        server_name  localhost;

        location / {
            root   html;
            index  index.html index.htm;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # this location represents any URI that ends in .py
        location ~ \.py$ {
            root           html;

            # foward the FastCGI request to the 'my_backend' upstream
            fastcgi_pass   my_backend;
            include        fastcgi_params;
        }

    }

    # FastCGI requests will be load balanced using the upstream_overload module

    num_spare_backends 0;
    alert_pipe /home/nginx_user/alert_pipe;

    upstream my_backend  {

        #activate the upstream_overload module
        overload;

        server    localhost:9000;
    }
}

