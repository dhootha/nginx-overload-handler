diff -rupN httperf-0.9.0/src/core.c httperf-0.9.0-bg/src/core.c
--- httperf-0.9.0/src/core.c	2012-06-25 19:22:15.634979255 -0700
+++ httperf-0.9.0-bg/src/core.c	2012-06-25 19:26:47.703035057 -0700
@@ -65,6 +65,8 @@
 #include <http.h>
 #include <conn.h>
 
+#define FD_SETSIZE 65535
+
 /*if we don't have GNU compatible realloc, fake it*/
 #if HAVE_REALLOC == 0
 void *rpl_realloc(void *ptr, size_t size)
@@ -938,6 +940,8 @@ core_connect (Conn *s)
 	  if (myport < 0)
 	    goto failure;
 
+	  // Bug fix from http://code.google.com/p/httperf/issues/attachmentText?id=15&aid=150000000&name=httperf-0.9.0-hogfix.patch
+	  myaddr.sin_family = AF_INET;
 	  myaddr.sin_port = htons (myport);
 	  SYSCALL (BIND,
 		   result = bind (sd, (struct sockaddr *)&myaddr,
diff -rupN httperf-0.9.0/src/gen/wsesslog.c httperf-0.9.0-bg/src/gen/wsesslog.c
--- httperf-0.9.0/src/gen/wsesslog.c	2012-06-25 19:22:15.630978595 -0700
+++ httperf-0.9.0-bg/src/gen/wsesslog.c	2012-06-25 19:22:34.916909149 -0700
@@ -90,7 +90,7 @@
 
 /* Maximum number of sessions that can be defined in the configuration
    file.  */
-#define MAX_SESSION_TEMPLATES	1000
+#define MAX_SESSION_TEMPLATES	10000
 
 #ifndef TRUE
 #define TRUE  (1)
diff -rupN httperf-0.9.0/src/idleconn.c httperf-0.9.0-bg/src/idleconn.c
--- httperf-0.9.0/src/idleconn.c	2012-06-25 19:22:15.634979255 -0700
+++ httperf-0.9.0-bg/src/idleconn.c	2012-06-25 19:26:55.267035016 -0700
@@ -48,6 +48,8 @@
 #include <sys/resource.h>
 #include <sys/socket.h>
 
+#define FD_SETSIZE 65535
+
 const char *prog_name;
 unsigned long num_conn, num_closed;
 struct timeval start_time;
diff -rupN httperf-0.9.0/src/stat/print_reply.c httperf-0.9.0-bg/src/stat/print_reply.c
--- httperf-0.9.0/src/stat/print_reply.c	2012-06-25 19:22:15.630978595 -0700
+++ httperf-0.9.0-bg/src/stat/print_reply.c	2012-06-25 19:22:34.916909149 -0700
@@ -124,6 +124,14 @@ print_request (Call *call)
   size_t hdr_len, h_len, b_len;
   int i, first, end;
   char *hdr;
+  char time_buf[100];
+  Time now;
+  int num_chars;
+
+  // when printing out the request, also print out the current time
+  now = timer_now();
+  num_chars = snprintf(time_buf, sizeof(time_buf), "%f\n", now);
+  print_buf (call, "REQUEST_TIME", time_buf, num_chars);
 
   first = IE_CONTENT;
   end = IE_CONTENT;
@@ -158,10 +166,18 @@ print_reply_hdr (Call *call, const char
 {
   Call_Private_Data *priv = CALL_PRIVATE_DATA (call);
   const char *eoh;
+  char time_buf[100];
+  Time now;
+  int num_chars;
 
   if (len <= 0 || priv->done_with_reply_hdr)
     return;
 
+  // when printing out the reply header, also print out the current time
+  now = timer_now();
+  num_chars = snprintf(time_buf, sizeof(time_buf), "%f\n", now);
+  print_buf (call, "REPLY_TIME", time_buf, num_chars);
+
   eoh = strstr (buf, "\r\n\r\n");
   if (eoh)
     {
